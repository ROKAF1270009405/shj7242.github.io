---
layout:     post
title:      "[JavaScript] Event"

date:       2017-11-03 18:55:00
author:     "신희준"
header-img: "img/post-bg-02.jpg"
comments: true
---

<head>
 <meta property="og:type" content="website">
 <meta property="og:title" content="자바스크립트 이벤트">
 <meta property="og:description" content="자바스크립트 이벤트">
 <meta property="og:url" content="http://shj7242.github.io/2017/11/03/JavaScript11/">

 <meta name="twitter:card" content="summary">
  <meta name="twitter:title" content="자바스크립트 이벤트">
  <meta name="twitter:description" content="자바스크립트 이벤트">
  <meta name="FACEBOOK:domain" content="http://shj7242.github.io/2017/11/03/JavaScript11/">
  <meta name="facebook:card" content="summary">
   <meta name="facebook:title" content="자바스크립트 이벤트">
   <meta name="facebook:description" content="자바스크립트 이벤트">
   <meta name="facebook:domain" content="http://shj7242.github.io/2017/11/03/JavaScript11/">


 </head>
<br>
<H4 style ="font-weight:bold; color:black;"> 모덴웹을 위한 Javascript, JQuery입문 [윤인성 지음] 참고</H4>
<br>
<H4 style ="font-weight:bold; color : black">2017 - 11 - 03 (금)</H4>
<li>Event 용어</li>
<li>Default Event</li>
<br>
<br>

>Event 용어

<br>

Event 는 사용자가 마우스를 클릭했을 때, 키보드를 눌렀을 때 시간이 지났을 때 등등 어떤 상황에 있어서 동작하는 것이다.

<br>
이벤트에서는 알아야할 몇몇 용어들이 있다.

~~~javascript
window.onload = function(){console.log('hello world')}
~~~

이러한 코드가 있을 때, window 객체의 onload 속성에 함수 자료형을 할당한다. 즉, 이벤트를 연결한다라고 한다. 이 때 onload 를 <b style='color:red'>'이벤트 속성(EventProperty)'</b> 이라고 하며 이벤트 속성에 할당된 함수를 <b style='color:red'>'이벤트 리스너(EventListener)'</b> 또는 <b style='color:red'>'이벤트 핸들러(EventHandler)'</b> 라고 한다.

<br><br>

>Default 이벤트 제거 (비밀번호 확인)

<br>

~~~html
  <form id ='my-form'>
    <label for="pw">비밀번호</label><br>
    <input type="password" id="pw" name = "pw">
    <label for ="pw_chk">비밀번호확인</label><br>
    <input type="password" id="pw_chk" name = "pw_chk">
    <input type = "submit" value ="제출"/>
  </form>  
~~~

~~~javascript
  window.onload = function(){
    document.getElementById('my-form').onsubmit = function(){
      //입력 양식 유효성검사 (비밀번호 확인)

      var pw = document.getElementById('pw').value;
      var pwChk = document.getElementById('pw_chk').value;

      if(pw ==pwChk){
        alert('OK')
      }else{
        alert('비밀번호 확인 요망')
        return false;  // submit 디폴트 이벤트 제거
      }
    };
  };
~~~

<br>
<br>

>표준 이벤트 모델

<br>

W3C 에서 공식적으로 지정한 DOM Level 2 의 이벤트 모델이다. (모든 브라우저에 공통적으로 적용되어야 함) <br>

* 메서드
  - addEventListener(eventName, handler, useCapture)   
  - removeEventListener(eventName, handler)

<br>
useCapture 매개변수의 경우 입력을 안할 시 false 가 default가 된다.
<br>

* 사용방법

~~~javascript
window.onload = function(){
  var header = document.getElementById('header');

  header.addEventListener('click', function(){
    this.innerHTML += '+';
  });
};
~~~

<br>

* 주의점

<br>
자바스크립트 코드에는 간혹 특정브라우저에서만 지원하는 메서드들이 있다. 확장성을 위해 W3C 표준 코드를 사용하는 것이 좋을 것 같다. 공통적인 코드를 사용하기 위해 잘알아볼 필요가 있다.
