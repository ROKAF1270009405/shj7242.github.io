---
layout:     post
title:      "[Node.js] 개발환경구축"

date:       2017-11-02 17:55:00
author:     "신희준"
header-img: "img/background.jpg"
comments: true
---

<head>
 <meta property="og:type" content="website">
 <meta property="og:title" content="Node.js 개발환경 구축">
 <meta property="og:description" content="Node.js 개발환경 구축">
 <meta property="og:url" content="http://shj7242.github.io/2017/11/02/Nodejs/">

 <meta name="twitter:card" content="summary">
  <meta name="twitter:title" content="Node.js 개발환경 구축">
  <meta name="twitter:description" content="Node.js 개발환경 구축">
  <meta name="FACEBOOK:domain" content="http://shj7242.github.io/2017/11/02/Nodejs/">
  <meta name="facebook:card" content="summary">
   <meta name="facebook:title" content="Node.js 개발환경 구축">
   <meta name="facebook:description" content="Node.js 개발환경 구축">
   <meta name="facebook:domain" content="http://shj7242.github.io/2017/11/02/Nodejs/">


 </head>

<br>
<H4 style ="font-weight:bold; color:black;"> </H4>
<br>
<H4 style ="font-weight:bold; color : black">2017 - 11 - 02 (목)</H4>
<li>node.js 소개</li>
<li>node.js 초기 설정</li>

<br>

> node.js 소개

<br>

지난 학기 시험에서 출제되었던 MEAN STACK 이 기억난다. MEAN은 (MongoDB, Express.js, Angular.js, Node.js) 를 적절한 개발환경을 맞추어놓은 STACK 이었다. 이 중 node.js 를 공부하고자 한다.
<br>

node.js 가 무엇인가

* Node 는 Javascript 런타임이다. Node.js 를 활용하여 웹서버를 구축할 수 있다.

<br>

node.js 의 특징

* single thread
* I/O operation Non blocking
* 비동기식

<br>

> node.js 초기 설정

<br>

1 . node.js 를 설치한다.

<br>

2 . test.js 파일을 하나 만들고 테스트코드 작성(console이용)

<br>

3 . $ node test.js 로 test.js 를 실행하여 정삭 작동을 확인한다.

<br>

4 . 서버 테스트 하기 ( 아래의 코드를 넣고 돌려본다. )

<br>

~~~javascript
var http = require("http");

http.createServer(function(request, response){
    /*
        HTTP 헤더 전송
        HTTP Status: 200 : OK
        Content Type: text/plain
    */
    response.writeHead(200, {'Content-Type': 'text/plain'});

    /*
        Response Body 를 "Hello World" 로 설정
    */
    response.end("Hello World\n");
}).listen(8081);

console.log("Server running at http://127.0.0.1:8081");
~~~

<br>

5 . $ node test.js (서버가 정삭 작동되는지 확인한다.)

<br>

6 . npm 설치 및 버전확인 ( $ npm -v)

<br>

7 . express 설치 / 제거

~~~javascript
//local 설치 : $ npm install express
var express = require('express'); //express 사용하기
/*global 설치 :
$ npm install -g express
$ cd [local path]/project
$ npm link express
*/
//express 제거 : $ npm uninstall express
//express 검색 : $ npm search express
~~~

<br>
