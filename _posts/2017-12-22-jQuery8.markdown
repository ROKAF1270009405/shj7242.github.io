---
layout:     post
title:      "[JQuery] 핸들바 템플릿"

date:       2017-12-22 20:55:00
author:     "신희준"
header-img: "img/post-bg-02.jpg"
comments: true
---

<head>
 <meta property="og:type" content="website">
 <meta property="og:title" content="jQuery 핸들바">
 <meta property="og:description" content="jQuery 핸들바">
 <meta property="og:url" content="http://shj7242.github.io/2017/12/22/JQuery8/">

 <meta name="twitter:card" content="summary">
  <meta name="twitter:title" content="jQuery 핸들바">
  <meta name="twitter:description" content="jQuery 핸들바">
  <meta name="FACEBOOK:domain" content="http://shj7242.github.io/2017/12/22/JQuery8/">
  <meta name="facebook:card" content="summary">
   <meta name="facebook:title" content="jQuery 핸들바">
   <meta name="facebook:description" content="jQuery 핸들바">
   <meta name="facebook:domain" content="http://shj7242.github.io/2017/12/22/JQuery8/">


 </head>


<H4 style ="font-weight:bold; color : black">2017 - 12 - 22 (금)</H4>

<br>


> 핸들바 템플릿

본래 핸들바를 접하기 전에는 jstl 의 foreach 문을 돌리던가 Ajax 를 활용하는 경우 서블릿에서 html 코드를 추가하는거 마냥 html 코드를 모두 입력해주어야해서 정말 지저분한 코드가 생성되었다. 그러던 중 핸들바 템플릿을 접하였고 코드를 좀 더 깔끔하게 수정이 가능했다.

해당 템플릿을 활용하여 기존에 찍었던 객체 배열을 좀더 간편히 찍을 수 있었다.

* 핸들바 CDN

~~~html
<script src="https://cdnjs.cloudflare.com/ajax/libs/handlebars.js/3.0.1/handlebars.js"></script>
~~~

* 만약에 AJAX 통신을 통해 JSON 형태의 데이터를 반환받았을 경우

~~~html
<script>
var tag = "<div>{{name}}</div> <div>{{sex}}</div>";
var successData = {name : "신희준" , sex : "남"}
var template = Handlebars.compile(source);


$("#profile").html(template(data));
</script>
~~~
