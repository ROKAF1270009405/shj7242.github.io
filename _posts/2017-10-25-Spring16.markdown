---
layout:     post
title:      "[Spring] Uricomponents, 동적SQL"

date:       2017-10-25 11:30:00
author:     "신희준"
header-img: "img/background.jpg"
comments: true
---

<head>
 <meta property="og:type" content="website">
 <meta property="og:title" content="스프링 (Spring) 동적 SQL, UriComponents">
 <meta property="og:description" content="스프링 (Spring) 동적 SQL, UriComponents">
 <meta property="og:url" content="http://shj7242.github.io/2017/10/25/Spring16/">

 <meta name="twitter:card" content="summary">
  <meta name="twitter:title" content="스프링 (Spring) 동적 SQL, UriComponents">
  <meta name="twitter:description" content="스프링 (Spring) 동적 SQL, UriComponents">
  <meta name="FACEBOOK:domain" content="http://shj7242.github.io/2017/10/25/Spring16/">
  <meta name="facebook:card" content="summary">
   <meta name="facebook:title" content="스프링 (Spring) 동적 SQL, UriComponents">
   <meta name="facebook:description" content="스프링 (Spring) 동적 SQL, UriComponents">
   <meta name="facebook:domain" content="http://shj7242.github.io/2017/10/25/Spring16/">


 </head>


<br>
<H4 style ="font-weight:bold; color : black">2017 - 10 - 25 (수)</H4>
<li>UriComponentsBuilder</li>
<li>동적 SQL</li>

<br>
<H4 style ="font-weight:bold; color:black;">코드로 배우는 스프링 웹프로젝트[구멍가게 코딩단 지음] 참조</H4>
<br>


>UriComponents

<br>
<p style = "font-size:14px">
URI를 작성할 때 도음을 주는 클래스이다. 이와함꼐 UriComponentsBuilder를 같이 사용한다.
<br>
사용법을 보면 다음과 같다.
</p>

~~~java
public String makeQuery(int page){

		UriComponents uriComponents =
	            UriComponentsBuilder.newInstance()
	            .queryParam("page", page)
	            .queryParam("perPageNum", cri.getPerPageNum())
	            .build();	            

		return uriComponents.toUriString();
	}
~~~

<p style = "font-size:14px">
makeQuery를 활용하여 페이지에 따른 게시글을 표시해준다.
</p>

~~~html
<c:forEach items="${list}" var="boardVO">
  <tr>
    <td>${boardVO.bno}</td>
    <td><a
      href='/board/readPage${pageMaker.makeQuery(pageMaker.cri.page) }&bno=${boardVO.bno}'>
        ${boardVO.title}</a></td>
    <td>${boardVO.writer}</td>
    <td><fmt:formatDate pattern="yyyy-MM-dd HH:mm"
        value="${boardVO.regdate}" /></td>
    <td><span class="badge bg-red">${boardVO.viewcnt }</span></td>
  </tr>

</c:forEach>
~~~

<br>

>동적 SQL

<br>
<p style = "font-size:14px">
MyBatis는 Mapper를 활용하여 DB에 특정 쿼리문을 날린다.
<br>
MyBatis는 내부적으로 몇개의 표현식을 가지고 있어서 상황에 따른 SQL 생성을 할 수 있다.
<br>
이것을 동적 SQL 이라 한다.
<br><br>
IF , CHOOSE , TRIM , FOREACH 를 활용한다.
<br>
아래는 if를 사용한 예이다.
</p>

~~~xml
<sql id="search">
 <if test="searchType != null" >
   <if test="searchType == 't'.toString()">
     and title like CONCAT('%', #{keyword}, '%')
   </if>
   <if test="searchType == 'c'.toString()">
     and content like CONCAT('%', #{keyword}, '%')
   </if>
   <if test="searchType == 'w'.toString()">
     and writer like CONCAT('%', #{keyword}, '%')
   </if>     
   <if test="searchType == 'tc'.toString()">
     and ( title like CONCAT('%', #{keyword}, '%') OR content like CONCAT('%', #{keyword}, '%'))
   </if>        
   <if test="searchType == 'cw'.toString()">
     and ( content like CONCAT('%', #{keyword}, '%') OR writer like CONCAT('%', #{keyword}, '%'))
   </if>        
   <if test="searchType == 'tcw'.toString()">
     and (   title like CONCAT('%', #{keyword}, '%')
           OR
             content like CONCAT('%', #{keyword}, '%')
           OR
             writer like CONCAT('%', #{keyword}, '%'))
   </if>              
 </if>  
</sql>
~~~
